apiVersion: apps/v1
kind: Deployment
metadata:
  name: purpur
  labels:
    app: purpur
spec:
  strategy:
    type: Recreate
  replicas: 1
  selector:
    matchLabels:
      app: purpur
  template:
    metadata:
      labels:
        app: purpur
    spec:
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
        runAsNonRoot: true
      containers:
      - name: purpur
        image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
        - containerPort: 25565
          name: mc
          protocol: TCP
        env:
        - name: TYPE
          value: {{ .Values.env.TYPE | quote }}
        - name: EULA
          value: {{ .Values.env.EULA | quote }}
        - name: ENABLE_RCON
          value: {{ .Values.env.ENABLE_RCON | quote }}
        - name: ONLINE_MODE
          value: {{ .Values.env.ONLINE_MODE | quote }}
        - name: MEMORY
          value: {{ .Values.env.MEMORY | quote }}
        volumeMounts:
        - name: data
          mountPath: /data
        resources:
{{ toYaml .Values.resources | indent 10 }}
        livenessProbe:
          tcpSocket:
            port: mc
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          tcpSocket:
            port: mc
          initialDelaySeconds: 10
          periodSeconds: 10
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          capabilities:
            drop: ["ALL"]
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: purpur-data



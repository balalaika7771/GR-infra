apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "purpur.fullname" . }}
  labels:
    {{- include "purpur.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "purpur.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "purpur.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/plugins: {{ include (print $.Template.BasePath "/plugins-config.yaml") . | sha256sum }}
        checksum/plugins-configs: {{ include (print $.Template.BasePath "/plugins-configs-cm.yaml") . | sha256sum }}
        plugins-sync-trigger: {{ now | date "20060102-150405" }}
    spec:
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}
      {{- if .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      {{- end }}
      securityContext:
        runAsNonRoot: false
        fsGroup: 10001
      initContainers:
        - name: copy-config
          image: busybox:1.36
          command: ["/bin/sh", "-c"]
          args:
            - |
              mkdir -p /data/config
              # Copy only paper-global.yml (Velocity config)
              cp /config-source/paper-global.yml /data/config/paper-global.yml
              echo "Copied paper-global.yml for Velocity support"
          volumeMounts:
            - name: world
              mountPath: /data
            - name: config-source
              mountPath: /config-source
        - name: copy-plugin-configs
          image: alpine:3.19
          command: ["/bin/sh", "-c"]
          args:
            - |
              apk add --no-cache yq >/dev/null 2>&1
              echo "Copying plugin configs from map..."
              
              # Read mapping from ConfigMap
              yq '.configs | to_entries | .[] | .key + "=" + .value' /plugin-configs/configs-map.yaml | while IFS= read -r line; do
                TARGET_PATH=$(echo "$line" | cut -d= -f1)
                SOURCE_FILE=$(echo "$line" | cut -d= -f2)
                
                # Create target directory
                TARGET_DIR=$(dirname "/data/plugins/$TARGET_PATH")
                mkdir -p "$TARGET_DIR"
                
                # Copy config with normalized key name
                SOURCE_KEY=$(echo "$TARGET_PATH" | tr '/' '-')
                cp "/plugin-configs/$SOURCE_KEY" "/data/plugins/$TARGET_PATH"
                echo "✓ Copied $TARGET_PATH"
              done
              
              echo "✓ All plugin configs copied"
          volumeMounts:
            - name: plugins
              mountPath: /data/plugins
            - name: plugin-configs
              mountPath: /plugin-configs
      containers:
        - name: purpur
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: JAVA_TOOL_OPTIONS
              value: "{{ .Values.jvm.opts }}"
            - name: EULA
              value: "TRUE"
            - name: TYPE
              value: "PURPUR"
            - name: VERSION
              value: "{{ .Values.version }}"
          ports:
            - name: mc
              containerPort: 25565
              protocol: TCP
            - name: health
              containerPort: {{ .Values.health.port }}
              protocol: TCP
          volumeMounts:
            - name: world
              mountPath: /data
            - name: plugins
              mountPath: /data/plugins
            - name: config-source
              mountPath: /config-source
              readOnly: true
          lifecycle:
            postStart:
              exec:
                command:
                  - /bin/sh
                  - -c
                  - |
                    # Wait for Purpur to generate configs
                    sleep 10
                    # Apply custom overrides if they exist
                    if [ -f /config-source/server-overrides.properties ]; then
                      cat /config-source/server-overrides.properties >> /data/server.properties
                      echo "Applied server.properties overrides"
                    fi
                    if [ -f /config-source/spigot-overrides.yml ]; then
                      cat /config-source/spigot-overrides.yml >> /data/spigot.yml
                      echo "Applied spigot.yml overrides"
                    fi
            preStop:
              exec:
                command:
                  - /bin/sh
                  - -c
                  - |
                    echo "save-all" | nc -w 5 localhost 25565 || true
                    sleep 5
                    echo "stop" | nc -w 5 localhost 25565 || true
                    sleep 10
          readinessProbe:
            tcpSocket:
              port: 25565
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 3
            failureThreshold: 3
          livenessProbe:
            tcpSocket:
              port: 25565
            initialDelaySeconds: 60
            periodSeconds: 15
            timeoutSeconds: 5
            failureThreshold: 3
          resources:
{{ toYaml .Values.resources | indent 12 }}
      volumes:
        - name: world
          {{- if .Values.persistence.enabled }}
          {{- if .Values.persistence.shared }}
          persistentVolumeClaim:
            claimName: {{ include "purpur.fullname" . }}-shared-world
          {{- else }}
          persistentVolumeClaim:
            claimName: {{ include "purpur.fullname" . }}-world
          {{- end }}
          {{- else }}
          emptyDir: {}
          {{- end }}
        - name: plugins
          {{- if .Values.plugins.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ include "purpur.fullname" . }}-plugins
          {{- else }}
          emptyDir: {}
          {{- end }}
        - name: config-source
          configMap:
            name: {{ include "purpur.fullname" . }}-config
        - name: plugin-configs
          configMap:
            name: {{ include "purpur.fullname" . }}-plugins-configs

